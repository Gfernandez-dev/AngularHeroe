{"ast":null,"code":"import { __decorate } from \"tslib\";\n// src/app/core/services/loading.service.ts\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nlet LoadingService = class LoadingService {\n  isLoadingSubject = new BehaviorSubject(false);\n  isLoading$ = this.isLoadingSubject.asObservable();\n  setLoading(value) {\n    this.isLoadingSubject.next(value);\n  }\n};\nLoadingService = __decorate([Injectable({\n  providedIn: 'root'\n})], LoadingService);\nexport { LoadingService };","map":{"version":3,"names":["Injectable","BehaviorSubject","LoadingService","isLoadingSubject","isLoading$","asObservable","setLoading","value","next","__decorate","providedIn"],"sources":["/Users/naranjax/app-heroes/src/app/core/interceptors/loading.interceptor.ts"],"sourcesContent":["// src/app/core/services/loading.service.ts\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoadingService {\n  private isLoadingSubject = new BehaviorSubject<boolean>(false);\n  isLoading$ = this.isLoadingSubject.asObservable();\n\n  setLoading(value: boolean) {\n    this.isLoadingSubject.next(value);\n  }\n}\n"],"mappings":";AAAA;AACA,SAASA,UAAU,QAAQ,eAAe;AAC1C,SAASC,eAAe,QAAQ,MAAM;AAK/B,IAAMC,cAAc,GAApB,MAAMA,cAAc;EACjBC,gBAAgB,GAAG,IAAIF,eAAe,CAAU,KAAK,CAAC;EAC9DG,UAAU,GAAG,IAAI,CAACD,gBAAgB,CAACE,YAAY,EAAE;EAEjDC,UAAUA,CAACC,KAAc;IACvB,IAAI,CAACJ,gBAAgB,CAACK,IAAI,CAACD,KAAK,CAAC;EACnC;CACD;AAPYL,cAAc,GAAAO,UAAA,EAH1BT,UAAU,CAAC;EACVU,UAAU,EAAE;CACb,CAAC,C,EACWR,cAAc,CAO1B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}