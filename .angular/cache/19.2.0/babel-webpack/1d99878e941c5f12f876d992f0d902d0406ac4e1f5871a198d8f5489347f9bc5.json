{"ast":null,"code":"import _asyncToGenerator from \"/Users/naranjax/app-heroes/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { TestBed, fakeAsync, tick } from '@angular/core/testing';\nimport { HeroListComponent } from './hero-list.component';\nimport { HeroesService } from '../../../core/services/heroes.service';\nimport { Router } from '@angular/router';\nimport { of } from 'rxjs';\ndescribe('HeroListComponent', () => {\n  let component;\n  let fixture;\n  let heroesServiceSpy;\n  let routerSpy;\n  const mockHeroes = [{\n    id: 1,\n    name: 'Superman',\n    power: 'Super fuerza'\n  }, {\n    id: 2,\n    name: 'Batman',\n    power: 'Estrategia'\n  }];\n  beforeEach(/*#__PURE__*/_asyncToGenerator(function* () {\n    heroesServiceSpy = jasmine.createSpyObj('HeroesService', ['getHeroesArray', 'deleteHero', 'searchHeroes', 'searchResults$']);\n    routerSpy = jasmine.createSpyObj('Router', ['navigate']);\n    heroesServiceSpy.getHeroesArray.and.returnValue(mockHeroes);\n    heroesServiceSpy.searchResults$ = of([mockHeroes[1]]);\n    yield TestBed.configureTestingModule({\n      declarations: [HeroListComponent],\n      providers: [{\n        provide: HeroesService,\n        useValue: heroesServiceSpy\n      }, {\n        provide: Router,\n        useValue: routerSpy\n      }]\n    }).compileComponents();\n    fixture = TestBed.createComponent(HeroListComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  }));\n  it('should create the hero-list component', () => {\n    expect(component).toBeTruthy();\n  });\n  it('should load heroes on init', () => {\n    expect(component.heroes.length).toBe(2);\n  });\n  it('should search heroes with debounceTime', fakeAsync(() => {\n    component.onSearch({\n      target: {\n        value: 'man'\n      }\n    });\n    tick(300);\n    fixture.detectChanges();\n    expect(heroesServiceSpy.searchHeroes).toHaveBeenCalledWith('man');\n    expect(component.heroes.length).toBe(1);\n  }));\n  it('should delete hero', () => {\n    spyOn(window, 'confirm').and.returnValue(true);\n    component.onDeleteHero(1);\n    expect(heroesServiceSpy.deleteHero).toHaveBeenCalledWith(1);\n  });\n});","map":{"version":3,"names":["TestBed","fakeAsync","tick","HeroListComponent","HeroesService","Router","of","describe","component","fixture","heroesServiceSpy","routerSpy","mockHeroes","id","name","power","beforeEach","_asyncToGenerator","jasmine","createSpyObj","getHeroesArray","and","returnValue","searchResults$","configureTestingModule","declarations","providers","provide","useValue","compileComponents","createComponent","componentInstance","detectChanges","it","expect","toBeTruthy","heroes","length","toBe","onSearch","target","value","searchHeroes","toHaveBeenCalledWith","spyOn","window","onDeleteHero","deleteHero"],"sources":["/Users/naranjax/app-heroes/src/app/heroes/components/hero-list/hero-list.spec.ts"],"sourcesContent":["import { ComponentFixture, TestBed, fakeAsync, tick } from '@angular/core/testing';\nimport { HeroListComponent } from './hero-list.component';\nimport { HeroesService } from '../../../core/services/heroes.service';\nimport { Router } from '@angular/router';\nimport { of } from 'rxjs';\nimport { Hero } from '../../../core/models/hero.model';\n\ndescribe('HeroListComponent', () => {\n  let component: HeroListComponent;\n  let fixture: ComponentFixture<HeroListComponent>;\n  let heroesServiceSpy: jasmine.SpyObj<HeroesService>;\n  let routerSpy: jasmine.SpyObj<Router>;\n\n  const mockHeroes: Hero[] = [\n    { id: 1, name: 'Superman', power: 'Super fuerza' },\n    { id: 2, name: 'Batman', power: 'Estrategia' }\n  ];\n\n  beforeEach(async () => {\n    heroesServiceSpy = jasmine.createSpyObj('HeroesService', [\n      'getHeroesArray',\n      'deleteHero',\n      'searchHeroes',\n      'searchResults$'\n    ]);\n    routerSpy = jasmine.createSpyObj('Router', ['navigate']);\n\n    heroesServiceSpy.getHeroesArray.and.returnValue(mockHeroes);\n    (heroesServiceSpy as any).searchResults$ = of([mockHeroes[1]]);\n\n    await TestBed.configureTestingModule({\n      declarations: [HeroListComponent],\n      providers: [\n        { provide: HeroesService, useValue: heroesServiceSpy },\n        { provide: Router, useValue: routerSpy }\n      ]\n    }).compileComponents();\n\n    fixture = TestBed.createComponent(HeroListComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n\n  it('should create the hero-list component', () => {\n    expect(component).toBeTruthy();\n  });\n\n  it('should load heroes on init', () => {\n    expect(component.heroes.length).toBe(2);\n  });\n\n  it('should search heroes with debounceTime', fakeAsync(() => {\n    component.onSearch({ target: { value: 'man' } } as any);\n    tick(300);\n    fixture.detectChanges();\n\n    expect(heroesServiceSpy.searchHeroes).toHaveBeenCalledWith('man');\n    expect(component.heroes.length).toBe(1);\n  }));\n\n  it('should delete hero', () => {\n    spyOn(window, 'confirm').and.returnValue(true);\n    component.onDeleteHero(1);\n    expect(heroesServiceSpy.deleteHero).toHaveBeenCalledWith(1);\n  });\n});\n"],"mappings":";AAAA,SAA2BA,OAAO,EAAEC,SAAS,EAAEC,IAAI,QAAQ,uBAAuB;AAClF,SAASC,iBAAiB,QAAQ,uBAAuB;AACzD,SAASC,aAAa,QAAQ,uCAAuC;AACrE,SAASC,MAAM,QAAQ,iBAAiB;AACxC,SAASC,EAAE,QAAQ,MAAM;AAGzBC,QAAQ,CAAC,mBAAmB,EAAE,MAAK;EACjC,IAAIC,SAA4B;EAChC,IAAIC,OAA4C;EAChD,IAAIC,gBAA+C;EACnD,IAAIC,SAAiC;EAErC,MAAMC,UAAU,GAAW,CACzB;IAAEC,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,UAAU;IAAEC,KAAK,EAAE;EAAc,CAAE,EAClD;IAAEF,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,QAAQ;IAAEC,KAAK,EAAE;EAAY,CAAE,CAC/C;EAEDC,UAAU,cAAAC,iBAAA,CAAC,aAAW;IACpBP,gBAAgB,GAAGQ,OAAO,CAACC,YAAY,CAAC,eAAe,EAAE,CACvD,gBAAgB,EAChB,YAAY,EACZ,cAAc,EACd,gBAAgB,CACjB,CAAC;IACFR,SAAS,GAAGO,OAAO,CAACC,YAAY,CAAC,QAAQ,EAAE,CAAC,UAAU,CAAC,CAAC;IAExDT,gBAAgB,CAACU,cAAc,CAACC,GAAG,CAACC,WAAW,CAACV,UAAU,CAAC;IAC1DF,gBAAwB,CAACa,cAAc,GAAGjB,EAAE,CAAC,CAACM,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;IAE9D,MAAMZ,OAAO,CAACwB,sBAAsB,CAAC;MACnCC,YAAY,EAAE,CAACtB,iBAAiB,CAAC;MACjCuB,SAAS,EAAE,CACT;QAAEC,OAAO,EAAEvB,aAAa;QAAEwB,QAAQ,EAAElB;MAAgB,CAAE,EACtD;QAAEiB,OAAO,EAAEtB,MAAM;QAAEuB,QAAQ,EAAEjB;MAAS,CAAE;KAE3C,CAAC,CAACkB,iBAAiB,EAAE;IAEtBpB,OAAO,GAAGT,OAAO,CAAC8B,eAAe,CAAC3B,iBAAiB,CAAC;IACpDK,SAAS,GAAGC,OAAO,CAACsB,iBAAiB;IACrCtB,OAAO,CAACuB,aAAa,EAAE;EACzB,CAAC,EAAC;EAEFC,EAAE,CAAC,uCAAuC,EAAE,MAAK;IAC/CC,MAAM,CAAC1B,SAAS,CAAC,CAAC2B,UAAU,EAAE;EAChC,CAAC,CAAC;EAEFF,EAAE,CAAC,4BAA4B,EAAE,MAAK;IACpCC,MAAM,CAAC1B,SAAS,CAAC4B,MAAM,CAACC,MAAM,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;EACzC,CAAC,CAAC;EAEFL,EAAE,CAAC,wCAAwC,EAAEhC,SAAS,CAAC,MAAK;IAC1DO,SAAS,CAAC+B,QAAQ,CAAC;MAAEC,MAAM,EAAE;QAAEC,KAAK,EAAE;MAAK;IAAE,CAAS,CAAC;IACvDvC,IAAI,CAAC,GAAG,CAAC;IACTO,OAAO,CAACuB,aAAa,EAAE;IAEvBE,MAAM,CAACxB,gBAAgB,CAACgC,YAAY,CAAC,CAACC,oBAAoB,CAAC,KAAK,CAAC;IACjET,MAAM,CAAC1B,SAAS,CAAC4B,MAAM,CAACC,MAAM,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;EACzC,CAAC,CAAC,CAAC;EAEHL,EAAE,CAAC,oBAAoB,EAAE,MAAK;IAC5BW,KAAK,CAACC,MAAM,EAAE,SAAS,CAAC,CAACxB,GAAG,CAACC,WAAW,CAAC,IAAI,CAAC;IAC9Cd,SAAS,CAACsC,YAAY,CAAC,CAAC,CAAC;IACzBZ,MAAM,CAACxB,gBAAgB,CAACqC,UAAU,CAAC,CAACJ,oBAAoB,CAAC,CAAC,CAAC;EAC7D,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}