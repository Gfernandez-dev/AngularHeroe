{"ast":null,"code":"// src/app/core/services/heroes.service.spec.ts\nimport { TestBed } from '@angular/core/testing';\nimport { HeroesService } from './heroes.service';\ndescribe('HeroesService (Signals)', () => {\n  let service;\n  beforeEach(() => {\n    TestBed.configureTestingModule({\n      providers: [HeroesService]\n    });\n    service = TestBed.inject(HeroesService);\n  });\n  it('should be created', () => {\n    expect(service).toBeTruthy();\n  });\n  it('should add a hero', () => {\n    service.addHero({\n      name: 'Batman',\n      power: 'Estrategia'\n    });\n    const heroes = service.getHeroesArray();\n    expect(heroes.find(h => h.name === 'Batman')).toBeDefined();\n  });\n  it('should update a hero', () => {\n    service.updateHero({\n      id: 1,\n      name: 'Superman 2.0',\n      power: 'Super fuerza'\n    });\n    const updated = service.getHeroById(1);\n    expect(updated?.name).toBe('Superman 2.0');\n  });\n  it('should delete a hero', () => {\n    service.deleteHero(1);\n    const hero = service.getHeroById(1);\n    expect(hero).toBeUndefined();\n  });\n  it('should search heroes', done => {\n    service.addHero({\n      name: 'Spiderman',\n      power: 'Sentido arácnido'\n    });\n    service.searchHeroes('man');\n    service.searchResults$.subscribe(results => {\n      expect(results.length).toBeGreaterThan(0);\n      done();\n    });\n  });\n});","map":{"version":3,"names":["TestBed","HeroesService","describe","service","beforeEach","configureTestingModule","providers","inject","it","expect","toBeTruthy","addHero","name","power","heroes","getHeroesArray","find","h","toBeDefined","updateHero","id","updated","getHeroById","toBe","deleteHero","hero","toBeUndefined","done","searchHeroes","searchResults$","subscribe","results","length","toBeGreaterThan"],"sources":["/Users/naranjax/app-heroes/src/app/core/services/heroes.service.spec.ts"],"sourcesContent":["// src/app/core/services/heroes.service.spec.ts\nimport { TestBed } from '@angular/core/testing';\nimport { HeroesService } from './heroes.service';\n\ndescribe('HeroesService (Signals)', () => {\n  let service: HeroesService;\n\n  beforeEach(() => {\n    TestBed.configureTestingModule({\n      providers: [HeroesService]\n    });\n    service = TestBed.inject(HeroesService);\n  });\n\n  it('should be created', () => {\n    expect(service).toBeTruthy();\n  });\n\n  it('should add a hero', () => {\n    service.addHero({ name: 'Batman', power: 'Estrategia' });\n    const heroes = service.getHeroesArray();\n    expect(heroes.find(h => h.name === 'Batman')).toBeDefined();\n  });\n\n  it('should update a hero', () => {\n    service.updateHero({ id: 1, name: 'Superman 2.0', power: 'Super fuerza' });\n    const updated = service.getHeroById(1);\n    expect(updated?.name).toBe('Superman 2.0');\n  });\n\n  it('should delete a hero', () => {\n    service.deleteHero(1);\n    const hero = service.getHeroById(1);\n    expect(hero).toBeUndefined();\n  });\n\n  it('should search heroes', (done) => {\n    service.addHero({ name: 'Spiderman', power: 'Sentido arácnido' });\n    service.searchHeroes('man');\n    service.searchResults$.subscribe(results => {\n      expect(results.length).toBeGreaterThan(0);\n      done();\n    });\n  });\n});\n"],"mappings":"AAAA;AACA,SAASA,OAAO,QAAQ,uBAAuB;AAC/C,SAASC,aAAa,QAAQ,kBAAkB;AAEhDC,QAAQ,CAAC,yBAAyB,EAAE,MAAK;EACvC,IAAIC,OAAsB;EAE1BC,UAAU,CAAC,MAAK;IACdJ,OAAO,CAACK,sBAAsB,CAAC;MAC7BC,SAAS,EAAE,CAACL,aAAa;KAC1B,CAAC;IACFE,OAAO,GAAGH,OAAO,CAACO,MAAM,CAACN,aAAa,CAAC;EACzC,CAAC,CAAC;EAEFO,EAAE,CAAC,mBAAmB,EAAE,MAAK;IAC3BC,MAAM,CAACN,OAAO,CAAC,CAACO,UAAU,EAAE;EAC9B,CAAC,CAAC;EAEFF,EAAE,CAAC,mBAAmB,EAAE,MAAK;IAC3BL,OAAO,CAACQ,OAAO,CAAC;MAAEC,IAAI,EAAE,QAAQ;MAAEC,KAAK,EAAE;IAAY,CAAE,CAAC;IACxD,MAAMC,MAAM,GAAGX,OAAO,CAACY,cAAc,EAAE;IACvCN,MAAM,CAACK,MAAM,CAACE,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACL,IAAI,KAAK,QAAQ,CAAC,CAAC,CAACM,WAAW,EAAE;EAC7D,CAAC,CAAC;EAEFV,EAAE,CAAC,sBAAsB,EAAE,MAAK;IAC9BL,OAAO,CAACgB,UAAU,CAAC;MAAEC,EAAE,EAAE,CAAC;MAAER,IAAI,EAAE,cAAc;MAAEC,KAAK,EAAE;IAAc,CAAE,CAAC;IAC1E,MAAMQ,OAAO,GAAGlB,OAAO,CAACmB,WAAW,CAAC,CAAC,CAAC;IACtCb,MAAM,CAACY,OAAO,EAAET,IAAI,CAAC,CAACW,IAAI,CAAC,cAAc,CAAC;EAC5C,CAAC,CAAC;EAEFf,EAAE,CAAC,sBAAsB,EAAE,MAAK;IAC9BL,OAAO,CAACqB,UAAU,CAAC,CAAC,CAAC;IACrB,MAAMC,IAAI,GAAGtB,OAAO,CAACmB,WAAW,CAAC,CAAC,CAAC;IACnCb,MAAM,CAACgB,IAAI,CAAC,CAACC,aAAa,EAAE;EAC9B,CAAC,CAAC;EAEFlB,EAAE,CAAC,sBAAsB,EAAGmB,IAAI,IAAI;IAClCxB,OAAO,CAACQ,OAAO,CAAC;MAAEC,IAAI,EAAE,WAAW;MAAEC,KAAK,EAAE;IAAkB,CAAE,CAAC;IACjEV,OAAO,CAACyB,YAAY,CAAC,KAAK,CAAC;IAC3BzB,OAAO,CAAC0B,cAAc,CAACC,SAAS,CAACC,OAAO,IAAG;MACzCtB,MAAM,CAACsB,OAAO,CAACC,MAAM,CAAC,CAACC,eAAe,CAAC,CAAC,CAAC;MACzCN,IAAI,EAAE;IACR,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}