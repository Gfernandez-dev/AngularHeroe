{"ast":null,"code":"import { __decorate } from \"tslib\";\n// src/app/core/interceptors/loading.interceptor.ts\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, finalize } from 'rxjs';\nlet LoadingInterceptor = class LoadingInterceptor {\n  isLoadingSubject = new BehaviorSubject(false);\n  isLoading$ = this.isLoadingSubject.asObservable();\n  intercept(req, next) {\n    this.isLoadingSubject.next(true);\n    return next.handle(req).pipe(finalize(() => {\n      this.isLoadingSubject.next(false);\n    }));\n  }\n};\nLoadingInterceptor = __decorate([Injectable()], LoadingInterceptor);\nexport { LoadingInterceptor };","map":{"version":3,"names":["Injectable","BehaviorSubject","finalize","LoadingInterceptor","isLoadingSubject","isLoading$","asObservable","intercept","req","next","handle","pipe","__decorate"],"sources":["/Users/naranjax/app-heroes/src/app/core/interceptors/loading.interceptor.ts"],"sourcesContent":["// src/app/core/interceptors/loading.interceptor.ts\nimport { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { BehaviorSubject, finalize, Observable } from 'rxjs';\n\n@Injectable()\nexport class LoadingInterceptor implements HttpInterceptor {\n  private isLoadingSubject = new BehaviorSubject<boolean>(false);\n  isLoading$ = this.isLoadingSubject.asObservable();\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    this.isLoadingSubject.next(true);\n    return next.handle(req).pipe(\n      finalize(() => {\n        this.isLoadingSubject.next(false);\n      })\n    );\n  }\n}\n"],"mappings":";AAAA;AACA,SAASA,UAAU,QAAQ,eAAe;AAE1C,SAASC,eAAe,EAAEC,QAAQ,QAAoB,MAAM;AAGrD,IAAMC,kBAAkB,GAAxB,MAAMA,kBAAkB;EACrBC,gBAAgB,GAAG,IAAIH,eAAe,CAAU,KAAK,CAAC;EAC9DI,UAAU,GAAG,IAAI,CAACD,gBAAgB,CAACE,YAAY,EAAE;EAEjDC,SAASA,CAACC,GAAqB,EAAEC,IAAiB;IAChD,IAAI,CAACL,gBAAgB,CAACK,IAAI,CAAC,IAAI,CAAC;IAChC,OAAOA,IAAI,CAACC,MAAM,CAACF,GAAG,CAAC,CAACG,IAAI,CAC1BT,QAAQ,CAAC,MAAK;MACZ,IAAI,CAACE,gBAAgB,CAACK,IAAI,CAAC,KAAK,CAAC;IACnC,CAAC,CAAC,CACH;EACH;CACD;AAZYN,kBAAkB,GAAAS,UAAA,EAD9BZ,UAAU,EAAE,C,EACAG,kBAAkB,CAY9B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}