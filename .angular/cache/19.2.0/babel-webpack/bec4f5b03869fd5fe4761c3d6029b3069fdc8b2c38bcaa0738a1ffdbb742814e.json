{"ast":null,"code":"import { __decorate } from \"tslib\";\n// src/app/core/services/heroes.service.ts\nimport { Injectable, signal } from '@angular/core';\nimport { BehaviorSubject, debounceTime, switchMap, of } from 'rxjs';\nlet HeroesService = class HeroesService {\n  /**\n   * Almacenamos los héroes en un WritableSignal<Map<number, Hero>>\n   * para acceso O(1) y reactividad interna sin suscripciones manuales.\n   */\n  heroesSignal = signal(new Map([[1, {\n    id: 1,\n    name: 'Superman',\n    power: 'Super fuerza',\n    description: 'Vuela y es muy fuerte'\n  }]]));\n  /**\n   * searchTerm con BehaviorSubject + debounceTime\n   * para búsqueda por nombre.\n   */\n  searchTermSubject = new BehaviorSubject('');\n  searchResults$ = this.searchTermSubject.pipe(debounceTime(300), switchMap(term => {\n    const heroesArray = [...this.heroesSignal().values()];\n    const filtered = heroesArray.filter(h => h.name.toLowerCase().includes(term.toLowerCase()));\n    return of(filtered);\n  }));\n  constructor() {}\n  /** Retorna todos los héroes como array */\n  getHeroesArray() {\n    return [...this.heroesSignal().values()];\n  }\n  /** Buscar héroes por string */\n  searchHeroes(term) {\n    this.searchTermSubject.next(term);\n  }\n  /** Obtiene héroe por ID */\n  getHeroById(id) {\n    return this.heroesSignal().get(id);\n  }\n  /** Agrega un héroe */\n  addHero(hero) {\n    const heroesMap = new Map(this.heroesSignal());\n    const newId = heroesMap.size > 0 ? Math.max(...heroesMap.keys()) + 1 : 1;\n    heroesMap.set(newId, {\n      id: newId,\n      ...hero\n    });\n    this.heroesSignal.set(heroesMap);\n  }\n  /** Actualiza un héroe existente */\n  updateHero(updated) {\n    const heroesMap = new Map(this.heroesSignal());\n    if (heroesMap.has(updated.id)) {\n      heroesMap.set(updated.id, updated);\n      this.heroesSignal.set(heroesMap);\n    }\n  }\n  /** Elimina un héroe */\n  deleteHero(id) {\n    const heroesMap = new Map(this.heroesSignal());\n    heroesMap.delete(id);\n    this.heroesSignal.set(heroesMap);\n  }\n  static ctorParameters = () => [];\n};\nHeroesService = __decorate([Injectable({\n  providedIn: 'root'\n})], HeroesService);\nexport { HeroesService };","map":{"version":3,"names":["Injectable","signal","BehaviorSubject","debounceTime","switchMap","of","HeroesService","heroesSignal","Map","id","name","power","description","searchTermSubject","searchResults$","pipe","term","heroesArray","values","filtered","filter","h","toLowerCase","includes","constructor","getHeroesArray","searchHeroes","next","getHeroById","get","addHero","hero","heroesMap","newId","size","Math","max","keys","set","updateHero","updated","has","deleteHero","delete","__decorate","providedIn"],"sources":["/Users/naranjax/app-heroes/src/app/core/services/heroes.service.ts"],"sourcesContent":["// src/app/core/services/heroes.service.ts\nimport { Injectable, signal, WritableSignal, computed } from '@angular/core';\nimport { Hero } from '../models/hero.model';\nimport { BehaviorSubject, debounceTime, switchMap, of } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HeroesService {\n  /**\n   * Almacenamos los héroes en un WritableSignal<Map<number, Hero>>\n   * para acceso O(1) y reactividad interna sin suscripciones manuales.\n   */\n  private heroesSignal: WritableSignal<Map<number, Hero>> = signal(\n    new Map<number, Hero>([\n      [1, { id: 1, name: 'Superman', power: 'Super fuerza', description: 'Vuela y es muy fuerte' }]\n    ])\n  );\n\n  /**\n   * searchTerm con BehaviorSubject + debounceTime\n   * para búsqueda por nombre.\n   */\n  private searchTermSubject = new BehaviorSubject<string>('');\n  searchResults$ = this.searchTermSubject.pipe(\n    debounceTime(300),\n    switchMap(term => {\n      const heroesArray = [...this.heroesSignal().values()];\n      const filtered = heroesArray.filter(h => h.name.toLowerCase().includes(term.toLowerCase()));\n      return of(filtered);\n    })\n  );\n\n  constructor() {}\n\n  /** Retorna todos los héroes como array */\n  getHeroesArray(): Hero[] {\n    return [...this.heroesSignal().values()];\n  }\n\n  /** Buscar héroes por string */\n  searchHeroes(term: string): void {\n    this.searchTermSubject.next(term);\n  }\n\n  /** Obtiene héroe por ID */\n  getHeroById(id: number): Hero | undefined {\n    return this.heroesSignal().get(id);\n  }\n\n  /** Agrega un héroe */\n  addHero(hero: Omit<Hero, 'id'>): void {\n    const heroesMap = new Map(this.heroesSignal());\n    const newId = heroesMap.size > 0 ? Math.max(...heroesMap.keys()) + 1 : 1;\n    heroesMap.set(newId, { id: newId, ...hero });\n    this.heroesSignal.set(heroesMap);\n  }\n\n  /** Actualiza un héroe existente */\n  updateHero(updated: Hero): void {\n    const heroesMap = new Map(this.heroesSignal());\n    if (heroesMap.has(updated.id)) {\n      heroesMap.set(updated.id, updated);\n      this.heroesSignal.set(heroesMap);\n    }\n  }\n\n  /** Elimina un héroe */\n  deleteHero(id: number): void {\n    const heroesMap = new Map(this.heroesSignal());\n    heroesMap.delete(id);\n    this.heroesSignal.set(heroesMap);\n  }\n}\n"],"mappings":";AAAA;AACA,SAASA,UAAU,EAAEC,MAAM,QAAkC,eAAe;AAE5E,SAASC,eAAe,EAAEC,YAAY,EAAEC,SAAS,EAAEC,EAAE,QAAQ,MAAM;AAK5D,IAAMC,aAAa,GAAnB,MAAMA,aAAa;EACxB;;;;EAIQC,YAAY,GAAsCN,MAAM,CAC9D,IAAIO,GAAG,CAAe,CACpB,CAAC,CAAC,EAAE;IAAEC,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,UAAU;IAAEC,KAAK,EAAE,cAAc;IAAEC,WAAW,EAAE;EAAuB,CAAE,CAAC,CAC9F,CAAC,CACH;EAED;;;;EAIQC,iBAAiB,GAAG,IAAIX,eAAe,CAAS,EAAE,CAAC;EAC3DY,cAAc,GAAG,IAAI,CAACD,iBAAiB,CAACE,IAAI,CAC1CZ,YAAY,CAAC,GAAG,CAAC,EACjBC,SAAS,CAACY,IAAI,IAAG;IACf,MAAMC,WAAW,GAAG,CAAC,GAAG,IAAI,CAACV,YAAY,EAAE,CAACW,MAAM,EAAE,CAAC;IACrD,MAAMC,QAAQ,GAAGF,WAAW,CAACG,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACX,IAAI,CAACY,WAAW,EAAE,CAACC,QAAQ,CAACP,IAAI,CAACM,WAAW,EAAE,CAAC,CAAC;IAC3F,OAAOjB,EAAE,CAACc,QAAQ,CAAC;EACrB,CAAC,CAAC,CACH;EAEDK,YAAA,GAAe;EAEf;EACAC,cAAcA,CAAA;IACZ,OAAO,CAAC,GAAG,IAAI,CAAClB,YAAY,EAAE,CAACW,MAAM,EAAE,CAAC;EAC1C;EAEA;EACAQ,YAAYA,CAACV,IAAY;IACvB,IAAI,CAACH,iBAAiB,CAACc,IAAI,CAACX,IAAI,CAAC;EACnC;EAEA;EACAY,WAAWA,CAACnB,EAAU;IACpB,OAAO,IAAI,CAACF,YAAY,EAAE,CAACsB,GAAG,CAACpB,EAAE,CAAC;EACpC;EAEA;EACAqB,OAAOA,CAACC,IAAsB;IAC5B,MAAMC,SAAS,GAAG,IAAIxB,GAAG,CAAC,IAAI,CAACD,YAAY,EAAE,CAAC;IAC9C,MAAM0B,KAAK,GAAGD,SAAS,CAACE,IAAI,GAAG,CAAC,GAAGC,IAAI,CAACC,GAAG,CAAC,GAAGJ,SAAS,CAACK,IAAI,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC;IACxEL,SAAS,CAACM,GAAG,CAACL,KAAK,EAAE;MAAExB,EAAE,EAAEwB,KAAK;MAAE,GAAGF;IAAI,CAAE,CAAC;IAC5C,IAAI,CAACxB,YAAY,CAAC+B,GAAG,CAACN,SAAS,CAAC;EAClC;EAEA;EACAO,UAAUA,CAACC,OAAa;IACtB,MAAMR,SAAS,GAAG,IAAIxB,GAAG,CAAC,IAAI,CAACD,YAAY,EAAE,CAAC;IAC9C,IAAIyB,SAAS,CAACS,GAAG,CAACD,OAAO,CAAC/B,EAAE,CAAC,EAAE;MAC7BuB,SAAS,CAACM,GAAG,CAACE,OAAO,CAAC/B,EAAE,EAAE+B,OAAO,CAAC;MAClC,IAAI,CAACjC,YAAY,CAAC+B,GAAG,CAACN,SAAS,CAAC;IAClC;EACF;EAEA;EACAU,UAAUA,CAACjC,EAAU;IACnB,MAAMuB,SAAS,GAAG,IAAIxB,GAAG,CAAC,IAAI,CAACD,YAAY,EAAE,CAAC;IAC9CyB,SAAS,CAACW,MAAM,CAAClC,EAAE,CAAC;IACpB,IAAI,CAACF,YAAY,CAAC+B,GAAG,CAACN,SAAS,CAAC;EAClC;;;AAhEW1B,aAAa,GAAAsC,UAAA,EAHzB5C,UAAU,CAAC;EACV6C,UAAU,EAAE;CACb,CAAC,C,EACWvC,aAAa,CAiEzB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}